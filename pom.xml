<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.buaa</groupId>
    <artifactId>learnforfun</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>learnforfun</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!--FastJson-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.68</version>
        </dependency>

        <!-- Mabatis+逆向工程 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--Druid数据库连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>

        <!--Swagger2支持-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.9.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.9.2</version>
        </dependency>
        <!--&lt;!&ndash; 导出文档 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>io.github.swagger2markup</groupId>-->
            <!--<artifactId>swagger2markup</artifactId>-->
            <!--<version>1.3.3</version>-->
        <!--</dependency>-->


        <!-- SpringBoot测试支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!--websocket依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>


        <!-- selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.0-jre</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>



            <!--<plugin>-->
                <!--<groupId>io.github.swagger2markup</groupId>-->
                <!--<artifactId>swagger2markup-maven-plugin</artifactId>-->
                <!--<version>1.2.0</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;此处端口一定要是当前项目启动所用的端口&ndash;&gt;-->
                    <!--<swaggerInput>http://localhost:8080/v2/api-docs</swaggerInput>-->
                    <!--<outputDir>src/docs/asciidoc/generated</outputDir>-->
                    <!--<config>-->
                        <!--&lt;!&ndash; 除了ASCIIDOC之外，还有MARKDOWN和CONFLUENCE_MARKUP可选 &ndash;&gt;-->
                        <!--<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
                    <!--</config>-->
                <!--</configuration>-->
            <!--</plugin>-->
            <!--&lt;!&ndash;此插件生成HTML和PDF&ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.asciidoctor</groupId>-->
                <!--<artifactId>asciidoctor-maven-plugin</artifactId>-->
                <!--<version>1.5.3</version>-->
                <!--&lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>org.asciidoctor</groupId>-->
                        <!--<artifactId>asciidoctorj-pdf</artifactId>-->
                        <!--<version>1.5.0-alpha.10.1</version>-->
                    <!--</dependency>-->
                    <!--<dependency>-->
                        <!--<groupId>org.jruby</groupId>-->
                        <!--<artifactId>jruby-complete</artifactId>-->
                        <!--<version>1.7.21</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
                <!--&lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
                <!--<configuration>-->
                    <!--<sourceDirectory>src/docs/asciidoc/generated</sourceDirectory>-->
                    <!--<sourceHighlighter>coderay</sourceHighlighter>-->
                    <!--<attributes>-->
                        <!--<toc>left</toc>-->
                    <!--</attributes>-->
                <!--</configuration>-->
                <!--&lt;!&ndash; Since each execution can only handle one backend, run-->
                     <!--separate executions for each desired output type &ndash;&gt;-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>output-html</id>-->
                        <!--<phase>generate-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>process-asciidoc</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<backend>html5</backend>-->
                            <!--<outputDirectory>src/docs/asciidoc/html</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</execution>-->

                    <!--<execution>-->
                        <!--<id>output-pdf</id>-->
                        <!--<phase>generate-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>process-asciidoc</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<backend>pdf</backend>-->
                            <!--<outputDirectory>src/docs/asciidoc/pdf</outputDirectory>-->
                        <!--</configuration>-->
                    <!--</execution>-->

                <!--</executions>-->
            <!--</plugin>-->


        </plugins>
    </build>

</project>
